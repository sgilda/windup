Draft

== Bootstrap

_How Windup starts up, finds the resources, loads the rules and starts
executing them_

### Boot


`@Inject WindupProcessor` <- CDI instantiates `WindupProcessorImpl`

Create `WindupProcessorConfig`

WindupProcessorImpl.execute( WindupProcessorConfig )

== `WindupProcessorImpl`

Instantiates `@Inject GraphContext graphContext`, which holds
graph-related objects.

`GraphContextFactoryImpl`: `create()`, `@Produces GraphContext produceGraphContext()`

== GraphContext

== RuleSubset



[[frames-creation]]
Frames creation
~~~~~~~~~~~~~~~

In the `GraphContextImpl` constructor. For additonal method Handlers,
see

[source,java]
----
final Module addModules = new Module()
{
    @Override
    public Graph configure(Graph baseGraph, FramedGraphConfiguration config)
    {
        config.setFrameClassLoaderResolver(fclr);
        // Java Handlers
        config.addMethodHandler(new FrameMapHandler());
        config.addMethodHandler(new MapInPropertiesHandler());
        config.addMethodHandler(new MapInAdjacentPropertiesHandler());
        return baseGraph;
     }
};
----